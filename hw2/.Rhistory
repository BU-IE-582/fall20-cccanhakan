total <- dplyr::bind_rows(total,epl1819) #for merging this easily i used dplyr's bind_rows() function
home_b1 <- 1/total$B365W
home_b1 <- 1/total$B365W
head(b1)
head(home_b1)
home_b1 <- 1/total$B365H
head(home_b1)
head(total$B365H)
home_b1n <- home_b1/(home_b1+away_b1+draw_b1)
away_b1 <- 1/total$B365A
draw_b1 <- 1/total$B365D
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
print(home_b1n+away_b1n+draw_b1n)
plot(home_b1n-away_b1n,draw_b1n)
bad_plot <- plot(home_b1 - away_b1, draw_b1, main="First Probabilities", xlab="HOME - AWAY ODDS", ylab="DRAW ODDS")
bad_plot <- plot(home_b1 - away_b1, draw_b1, main="Not Normalized Probabilities", xlab="Home - Away Odds", ylab="Draw Odds")
bad_plot <- plot(home_b1 - away_b1, draw_b1, main="Not Normalized Probabilities", xlab="Home - Away Odds", ylab="Draw Odds")
good_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities", xlab="Home - Away Odds", ylab="Draw Odds")
predict(good_plot)
predict(draw_b1n,home_b1-away_b1)
predict(draw_b1n,home_b1n-away_b1n)
predict(draw_b1n~home_b1n-away_b1n)
lm(draw_b1n~home_b1n-away_b1n)
summary(lm(draw_b1n~home_b1n-away_b1n))
total <- cbind(total,odd_diff)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
total <- rbind(epl2021,epl1920)
total <- dplyr::bind_rows(total,epl1819) #for merging this easily i used dplyr's bind_rows() function
total <- cbind(total,odd_diff)
intvals = seq(-1,1,by=0.2)
intvals
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff > n-0.2){
if(total$FTR = 'D'){
print('umm')
}
}
}
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff > n-0.2){
if(total$FTR = 'D'){
print('umm')
}else{
print('yeet')
}
}
}
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff && total$odd_diff> n-0.2){
if(total$FTR = 'D'){
print('umm')
}else{
print('yeet')
}
}
}
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff && total$odd_diff> n-0.2){
if(total$FTR = 'D'){
print('umm')
}else{
print('yeet')
}
}
}
print(n)
print(seq)
print(seq[n])
print('yeet')
for (n in seq(-1,0.8,by=0.2)) {
print('yeet')
}
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff && total$odd_diff> n-0.2){
if(total$FTR = 'D'){
print('umm')
}else{
print('yeet')
}
}
}
for (n in seq(-1,0.8,by=0.2)) {
if (n > total$odd_diff && total$odd_diff> n-0.2){
if(total$FTR == 'D'){
print('umm')
}else{
print('yeet')
}
}
}
for (x in total) {
if (x[FTR] == "D")
print('Draw')
}
print(x)
res_list <- c()
for (n in seq(-1,0.8,by=0.2)) {
checker <- total$odd_diff > n && total$odd_diff <= n + 0.2
partial_sum <- sum(checker) # Number of games in the odd category
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_sum2) # draw/all
}
res_list
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- total$odd_diff > n && total$odd_diff <= n + 0.2
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_sum2) # draw/all
print(partial_div)
print('---')
}
# for (n in seq(-1,0.8,by=0.2)) {
n = -1
checker <- total$odd_diff > n && total$odd_diff <= n + 0.2
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
View(total)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_sum2) # draw/all
print(partial_div)
print('---')
}
plot_data <- cbind(seq(-1,0.8,by=0.2),res_list)
plot_data
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-1,0.8,by=0.2),res_list)
plot_data
plot_data <- cbind(seq(-0.9,0.0,by=0.2),res_list)
plot_data
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
points(plot_data,col="red")
points(plot_data,col="red",fill=red)
points(plot_data,col="red",fill="red")
points(plot_data,col="red")
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities #1", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$BWH
away_b1 <- 1/total$BWA
draw_b1 <- 1/total$BWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities #1", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities #2", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$IWH
away_b1 <- 1/total$IWA
draw_b1 <- 1/total$IWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities #3", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$IWH
away_b1 <- 1/total$IWA
draw_b1 <- 1/total$IWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="Normalized Probabilities #4", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
View(total)
View(total)
library(ggplot2)
library(dplyr)
epl2021 <- read.csv(file = 'data/prem 20-21.csv')
epl1920 <- read.csv(file = 'data/prem 19-20.csv')
epl1819 <- read.csv(file = 'data/prem 18-19.csv')
total <- rbind(epl2021,epl1920)
total <- dplyr::bind_rows(total,epl1819) #for merging this easily i used dplyr's bind_rows() function
carded_games <- total$AR > 0 || total$HR > 0
sum(carded_games)
carded_games <- total$AR > 0
sum(carded_games)
carded_home <- total$HR > 0
carded_away <- total$AR > 0
carded_games <- carded_home || carded_away
sum(carded_games)
carded_home <- total$HR + total$AR > 0
sum(carded_home)
carded_games <- total$HR + total$AR > 0
sum(carded_games)
total <- total[carded_games]
total
non_carded_games <- total$HR + total$AR == 0
sum(non_carded_games)
total <- total[non_carded_games]
non_carded_games <- total$HR + total$AR == 0
total <- total[non_carded_games]
total <- total[non_carded_games,]
total
home_b1 <- 1/total$B365H
away_b1 <- 1/total$B365A
draw_b1 <- 1/total$B365D
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="(no red)\nNormalized Probabilities #1", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$BWH
away_b1 <- 1/total$BWA
draw_b1 <- 1/total$BWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="(no red)\nNormalized Probabilities #2", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$IWH
away_b1 <- 1/total$IWA
draw_b1 <- 1/total$IWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="(no red)\nNormalized Probabilities #3", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
home_b1 <- 1/total$IWH
away_b1 <- 1/total$IWA
draw_b1 <- 1/total$IWD
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.8,by=0.2)) {
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.2
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.9,0.9,by=0.2),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="(no red)\nNormalized Probabilities #4", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
library(ggplot2)
library(dplyr)
epl2021 <- read.csv(file = 'data/prem 20-21.csv')
epl1920 <- read.csv(file = 'data/prem 19-20.csv')
epl1819 <- read.csv(file = 'data/prem 18-19.csv')
total <- rbind(epl2021,epl1920)
total <- dplyr::bind_rows(total,epl1819) #for merging this easily i used dplyr's bind_rows() function
home_b1 <- 1/total$B365H
away_b1 <- 1/total$B365A
draw_b1 <- 1/total$B365D
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.9,by=0.1)) { # 0.2lik degil de 0.1lik araliklara bakayim dedim
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.1
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.95,0.95,by=0.1),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="0.1 aralik\nNormalized Probabilities #1", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
epl2021 <- read.csv(file = 'data/prem 20-21.csv')
epl1920 <- read.csv(file = 'data/prem 19-20.csv')
epl1819 <- read.csv(file = 'data/prem 18-19.csv')
total <- rbind(epl2021,epl1920)
total <- dplyr::bind_rows(total,epl1819) #for merging this easily i used dplyr's bind_rows() function
non_carded_games <- total$HR + total$AR == 0
sum(non_carded_games)
total <- total[non_carded_games,]
total
home_b1 <- 1/total$B365H
away_b1 <- 1/total$B365A
draw_b1 <- 1/total$B365D
home_b1n <- home_b1/(home_b1 + away_b1 + draw_b1)
away_b1n <- away_b1/(home_b1 + away_b1 + draw_b1)
draw_b1n <- draw_b1/(home_b1 + away_b1 + draw_b1)
odd_diff <- home_b1n-away_b1n
total <- cbind(total,odd_diff)
res_list <- c() # res_list[0] is the ratio: draw/all in the threshold (-1,-0.8]
for (n in seq(-1,0.9,by=0.1)) { # 0.2lik degil de 0.1lik araliklara bakayim dedim
checker <- c()
for (odd in total$odd_diff){
checker_val <- odd > n && odd <= n+0.1
checker <- c(checker, checker_val)
}
partial_sum <- sum(checker) # Number of games in the odd category
print(partial_sum)
temp <- total[checker,]
checker2 <- temp$FTR == "D"
partial_sum2 <- sum(checker2) # Number of games in the category and resulted in draw
print(partial_sum2)
partial_div <- partial_sum2/partial_sum
res_list <- c(res_list,partial_div) # draw/all
print(partial_div)
print('---')
}
res_list
plot_data <- cbind(seq(-0.95,0.95,by=0.1),res_list)
plot_data
first_plot <- plot(home_b1n - away_b1n, draw_b1n, main="0.1 aralik\nNormalized Probabilities #1", xlab="P(Home) - P(Away) of bookmarker", ylab="P(Draw) of bookmarker")
points(plot_data,col="red")
View(epl1920)
View(epl1920)
