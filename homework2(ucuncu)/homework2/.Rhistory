xvelo <- cbind(xvelo,xvelo[j-1]+xdata[j])
#### plots <- data.frame....######
xyzvelo <- data.frame() #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(j)
xvelo <- cbind(xvelo,xvelo[j-1]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-1]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-1]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
#### plots <- data.frame....######
xyzvelo <- xdata$V1 #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(j)
xvelo <- cbind(xvelo,xvelo[j-1]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-1]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-1]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
#### plots <- data.frame....######
xyzvelo <- xdata$V1 #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i,j)
xvelo <- cbind(xvelo,xvelo[j-1]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-1]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-1]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i)
print(j)
xvelo <- cbind(xvelo,xvelo[j-1]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-1]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-1]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
View(xyzvelo)
View(xyzvelo)
#### plots <- data.frame....######
xyzvelo <- xdata$V1 #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i)
print(j)
xvelo <- cbind(xvelo,xvelo[j-2]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-1]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-1]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
#### plots <- data.frame....######
xyzvelo <- xdata$V1 #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i)
print(j)
xvelo <- cbind(xvelo,xvelo[j-2]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-2]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-2]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
#### plots <- data.frame....######
xyzvelo <- data.frame() #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i)
print(j)
xvelo <- cbind(xvelo,xvelo[j-2]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-2]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-2]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
#### plots <- data.frame....######
xyzvelo <- c(1:315) #empty df for adding the x,y,z velocity datas for each class
for (i in c(1:8)){
xvelo <- xdata[xdata$V1 == i,][1,2]
yvelo <- ydata[ydata$V1 == i,][1,2]
zvelo <- zdata[zdata$V1 == i,][1,2]
for (j in c(3:316)){
print(i)
print(j)
xvelo <- cbind(xvelo,xvelo[j-2]+xdata[1,j])
yvelo <- cbind(yvelo,yvelo[j-2]+ydata[1,j])
zvelo <- cbind(zvelo,zvelo[j-2]+zdata[1,j])
}
xyzvelo <- cbind(xyzvelo,cbind(t(xvelo),t(yvelo),t(zvelo)))
}
View(xyzvelo)
library(scatterplot3d)
scatterplot3d(xyzvelo[,2:4])
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,highlight.3d = TRUE)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = TRUE)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = red)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red')
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=30)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=25)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=25)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=2)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=3)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=4)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=5)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=6)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE,color = 'red', pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=19)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=19)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=21)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=22)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class 1',box=FALSE, pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class'+1,box=FALSE, pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main='class'1,box=FALSE, pch=20)
scatterplot3d(xyzvelo[,2:4],xlab='X',ylab='Y',zlab='Z',main=c('class',sum),box=FALSE, pch=20)
for (i in c(1:8)){
p <- scatterplot3d(xyzvelo[,1+i:3+i],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=20)
plots <- cbind(plots,p)
p
}
plots <- data.frame()
for (i in c(1:8)){
p <- scatterplot3d(xyzvelo[,1+i:3+i],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=20)
plots <- cbind(plots,p)
p
}
for (i in c(1:8)){
p <- scatterplot3d(xyzvelo[,1+i:3+i],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=20)
p
}
p <- scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=20)
for (i in c(1:8)){
p <- scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=20)
p
}
xdata <- read.table(text = gsub("  ", "\t", readLines("uWaveGestureLibrary_X_TRAIN")))
ydata <- read.table(text = gsub("  ", "\t", readLines("uWaveGestureLibrary_Y_TRAIN")))
zdata <- read.table(text = gsub("  ", "\t", readLines("uWaveGestureLibrary_Z_TRAIN")))
x1velo <- cbind(xdata[1,1], xdata[1,2])
ctr <- 2
for (col in xdata[1,3:316]){
x1velo <- cbind(x1velo, x1velo[ctr]+col)
ctr <- ctr + 1
}
y1velo <- cbind(ydata[1,1], ydata[1,2])
ctr <- 2
for (col in ydata[1,3:316]){
y1velo <- cbind(y1velo, y1velo[ctr]+col)
ctr <- ctr + 1
}
z1velo <- cbind(zdata[1,1], zdata[1,2])
ctr <- 2
for (col in zdata[1,3:316]){
z1velo <- cbind(z1velo, z1velo[ctr]+col)
ctr <- ctr + 1
}
plot(t(x1velo))
plot(t(y1velo))
plot(t(z1velo))
xyz1velo <- cbind(t(x1velo),t(y1velo),t(z1velo))
scatterplot3d(t(x1velo),t(y1velo),t(z1velo))
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=16)
}
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=25)
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=24)
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=23)
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=22)
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xyzvelo[,3*i-1:3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
scatterplot3d(xyzvelo[,2:5])
scatterplot3d(xyzvelo[,2:5],pch = 21)
scatterplot3d(xyzvelo[,2:5],pch = 20)
scatterplot3d(xyzvelo[,2],xyzvelo[,3],xyzvelo[,4])
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xyzvelo[,3*i-1],xyzvelo[,3*i],xyzvelo[,3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
# let's print all plots
for (i in c(1:8)){
scatterplot3d(x = xyzvelo[,3*i-1], y = xyzvelo[,3*i], z = xyzvelo[,3*i+1],xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xxyzvelo[,3*i-1:3*i+1], xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
scatterplot3d(xyzvelo[,3*i-1:3*i+1], xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xyzvelo[,3*i-1:3*i+1], xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
# for each time series we add 315 rows to the data frame
for (m in c(1:896)){
print(m)
xyz_tog <- cbind(rep(m,315),c(1:315),t(xdata[m,2:316]),t(ydata[m,2:316]),t(zdata[m,2:316]),rep(xdata[m,1],315))
colnames(xyz_tog) <- colnames(combined)
combined <- rbind(combined,xyz_tog)
}
# create a data frame for storing the data as explained
combined <- data.frame(time_series_id=integer(0),time_index=integer(0),x=numeric(0),y=numeric(0),z=numeric(0),class=integer(0))
# for each time series we add 315 rows to the data frame
for (m in c(1:896)){
print(m)
xyz_tog <- cbind(rep(m,315),c(1:315),t(xdata[m,2:316]),t(ydata[m,2:316]),t(zdata[m,2:316]),rep(xdata[m,1],315))
colnames(xyz_tog) <- colnames(combined)
combined <- rbind(combined,xyz_tog)
}
pca_res <- prcomp(combined[,3:5])
var_explained <- pca_res$sdev^2/sum(pca_res$sdev^2)
var_explained # we can see the explanation rates
combined <- cbind(combined, pca_res$x[,1])
View(combined)
View(combined)
colnames(combined)[7] <- 'PCA'
View(combined)
View(combined)
plot(combine$time_index[1:315],combine$PCA[1:315])
cat1 <- combine[combine$class == '1',]
plot1 <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$PCA, var2 = cat1[316:630,]$PCA)
ggplot(plot1, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2"))
cat1 <- combine[combine$class == '1',]
cat2 <- combine[combine$class == '2',]
cat3 <- combine[combine$class == '3',]
cat4 <- combine[combine$class == '4',]
cat5 <- combine[combine$class == '5',]
cat6 <- combine[combine$class == '6',]
cat7 <- combine[combine$class == '7',]
cat8 <- combine[combine$class == '8',]
plot1 <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$PCA, var2 = cat1[316:630,]$PCA)
# comparing 2 elements from each class
plot1 <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$PCA, var2 = cat1[316:630,]$PCA)
plot2 <- data.frame(time_index = c(1:315), var1 = cat2[1:315,]$PCA, var2 = cat2[316:630,]$PCA)
plot3 <- data.frame(time_index = c(1:315), var1 = cat3[1:315,]$PCA, var2 = cat3[316:630,]$PCA)
plot4 <- data.frame(time_index = c(1:315), var1 = cat4[1:315,]$PCA, var2 = cat4[316:630,]$PCA)
plot5 <- data.frame(time_index = c(1:315), var1 = cat5[1:315,]$PCA, var2 = cat5[316:630,]$PCA)
plot6 <- data.frame(time_index = c(1:315), var1 = cat6[1:315,]$PCA, var2 = cat6[316:630,]$PCA)
plot7 <- data.frame(time_index = c(1:315), var1 = cat7[1:315,]$PCA, var2 = cat7[316:630,]$PCA)
plot8 <- data.frame(time_index = c(1:315), var1 = cat8[1:315,]$PCA, var2 = cat8[316:630,]$PCA)
ggplot(plot1, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2"))
ggplot(plot1, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 1")
ggplot(plot2, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 2")
ggplot(plot3, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 3")
ggplot(plot4, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 4")
ggplot(plot5, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 5")
ggplot(plot6, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 6")
ggplot(plot7, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 7")
ggplot(plot8, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 8")
# calculating new pca's
new_pca_1 <- prcomp(cat1[,3:5])
new_pca_2 <- prcomp(cat2[,3:5])
new_pca_3 <- prcomp(cat3[,3:5])
new_pca_4 <- prcomp(cat4[,3:5])
new_pca_5 <- prcomp(cat5[,3:5])
new_pca_6 <- prcomp(cat6[,3:5])
new_pca_7 <- prcomp(cat7[,3:5])
new_pca_8 <- prcomp(cat8[,3:5])
View(cat1)
View(cat1)
# add the new pca to data frames
cat1 <- cbind(cat1,new_pca_1$x[,1])
cat2 <- cbind(cat2,new_pca_2$x[,1])
cat3 <- cbind(cat3,new_pca_3$x[,1])
cat4 <- cbind(cat4,new_pca_4$x[,1])
cat5 <- cbind(cat5,new_pca_5$x[,1])
cat6 <- cbind(cat6,new_pca_6$x[,1])
cat7 <- cbind(cat7,new_pca_7$x[,1])
cat8 <- cbind(cat8,new_pca_8$x[,1])
plot1_new <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$newPCA, var2 = cat1[316:630,]$newPCA)
colnames(cat1)[8] <- 'newPCA'
colnames(cat2)[8] <- 'newPCA'
colnames(cat3)[8] <- 'newPCA'
colnames(cat4)[8] <- 'newPCA'
colnames(cat5)[8] <- 'newPCA'
colnames(cat6)[8] <- 'newPCA'
colnames(cat7)[8] <- 'newPCA'
colnames(cat8)[8] <- 'newPCA'
plot1_new <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$newPCA, var2 = cat1[316:630,]$newPCA)
ggplot(plot1_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2"))
plot1_new <- data.frame(time_index = c(1:315), var1 = cat1[1:315,]$newPCA, var2 = cat1[316:630,]$newPCA)
ggplot(plot1_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 1 with new PCA")
plot2_new <- data.frame(time_index = c(1:315), var1 = cat2[1:315,]$newPCA, var2 = cat2[316:630,]$newPCA)
ggplot(plot2_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 2 with new PCA")
plot3_new <- data.frame(time_index = c(1:315), var1 = cat3[1:315,]$newPCA, var2 = cat3[316:630,]$newPCA)
ggplot(plot3_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 3 with new PCA")
plot4_new <- data.frame(time_index = c(1:315), var1 = cat4[1:315,]$newPCA, var2 = cat4[316:630,]$newPCA)
ggplot(plot4_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 4 with new PCA")
plot5_new <- data.frame(time_index = c(1:315), var1 = cat5[1:315,]$newPCA, var2 = cat5[316:630,]$newPCA)
ggplot(plot5_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 5 with new PCA")
plot6_new <- data.frame(time_index = c(1:315), var1 = cat6[1:315,]$newPCA, var2 = cat6[316:630,]$newPCA)
ggplot(plot6_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 6 with new PCA")
plot7_new <- data.frame(time_index = c(1:315), var1 = cat7[1:315,]$newPCA, var2 = cat7[316:630,]$newPCA)
ggplot(plot7_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 7 with new PCA")
plot8_new <- data.frame(time_index = c(1:315), var1 = cat8[1:315,]$newPCA, var2 = cat8[316:630,]$newPCA)
ggplot(plot8_new, aes(time_index,var1)) +
geom_line(aes(y = var1, colour = "var1")) +
geom_line(aes(y = var2, colour = "var2")) +
ggtitle("Comparison of 2 elements from \n Class 8 with new PCA")
# we can just take x, y and z at each time series matrix and create the distance  matrix
dist_x <- dist(xdata[,2])
for (i in c(3:316)){
dist_x <- dist_x + dist(xdata[,i])
}
dist_y <- dist(ydata[,2])
for (i in c(3:316)){
dist_y <- dist_y + dist(ydata[,i])
}
dist_z <- dist(zdata[,2])
for (i in c(3:316)){
dist_z <- dist_z + dist(zdata[,i])
}
# euclidean distance calculation
dist_euc <- sqrt(dist_x^2 + dist_y^2 + dist_z^2)
feature2d + scale_color_manual(values = cbp2)
feature2d + scale_color_manual(values = custom.col)
# Multidimensional scaling to 2d
scaled_color <- cmdscale(dist_euc, k=2)
scaled_color <- as.data.frame(scaled_color)
scaled_color <- cbind(scaled_color, as.factor(xdata$V1)) # using class numbers as factor to differentiate classes by color
colnames(scaled_color) <- c('dim1','dim2','class')
# Using custom colors for seperation to be better (for colorblinds)
custom.col <- c("#FFDB6D", "#C4961A", "#F4EDCA",
"#D16103", "#C3D7A4", "#52854C", "#4E84C4", "#293352")
# Plotting
feature2d <- ggplot(scaled_color, aes(x=dim1, y=dim2, colour=class)) +
geom_point() +
scale_color_manual(values = custom.col)
# Plotting
feature2d <- ggplot(scaled_color, aes(x=dim1, y=dim2, colour=class)) +
geom_point() +
scale_color_manual(values = custom.col) +
ggtitle('Multi-Dimensional Scaling')
feature2d
## Part a
```{r setup, include=FALSE}
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
View(plot8)
View(xyzvelo)
View(xyzvelo)
fig_scatter3d <- plot_ly(xyzvelo, x=~V2, y=~V3, z=~V4)
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=~V2, y=~V3, z=~V4)
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
fig_scatter3d
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[2], y=~V3, z=~V4)
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
fig_scatter3d
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,2], y=~V3, z=~V4)
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
fig_scatter3d
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,2], y=xyzvelo[,3], z=xyzvelo[,4])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
fig_scatter3d
# let's print all plots
for (i in c(1:8)){
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,3*i-1], y=xyzvelo[,3*i], z=xyzvelo[,3*i+1])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(scene = list(xaxis = list(title = 'X axis'),
yaxis = list(title = 'Y axis'),
zaxis = list(title = 'Z axis')))
fig_scatter3d
}
# let's print all plots
for (i in c(1:8)){
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,3*i-1], y=xyzvelo[,3*i], z=xyzvelo[,3*i+1])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(title = c('3d scatter graph for Class ',i),
scene = list(xaxis = list(title = 'X axis'),
yaxis = list(title = 'Y axis'),
zaxis = list(title = 'Z axis')))
fig_scatter3d
}
fig_scatter3d
# let's print all plots
for (i in c(1:8)){
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,3*i-1], y=xyzvelo[,3*i], z=xyzvelo[,3*i+1])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(title = c('3d scatter graph for Class ',i),
scene = list(xaxis = list(title = 'X axis'),
yaxis = list(title = 'Y axis'),
zaxis = list(title = 'Z axis')))
fig_scatter3d
}
fig_scatter3d
# PLOT_LY
#1
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,2], y=xyzvelo[,3], z=xyzvelo[,4])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(title = c('3d scatter graph for Class ',1),
scene = list(xaxis = list(title = 'X axis'),
yaxis = list(title = 'Y axis'),
zaxis = list(title = 'Z axis')))
fig_scatter3d
#2
fig_scatter3d <- plot_ly(as.data.frame(xyzvelo), x=xyzvelo[,5], y=xyzvelo[,6], z=xyzvelo[,7])
fig_scatter3d <- fig_scatter3d %>% add_markers()
fig_scatter3d <- fig_scatter3d %>% layout(title = c('3d scatter graph for Class ',2),
scene = list(xaxis = list(title = 'X axis'),
yaxis = list(title = 'Y axis'),
zaxis = list(title = 'Z axis')))
fig_scatter3d
# let's print all plots
for (i in c(1:8)){
scatterplot3d(xyzvelo[,3*i-1:3*i+1], xlab='X',ylab='Y',zlab='Z',main=c('class',i),box=FALSE, pch=21)
}
![](Rplot1.png)
![](Rplot1.png)
![](Rplot1.png)
![](Rplot1.png)
![](Rplot1.png)
![](Rplot1.png)
![](d_multidimscaling.png)
